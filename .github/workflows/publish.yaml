name: Publish

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      cibw_build:
        description: 'CIBW_BUILD environment variable'

jobs:
  build-wheels:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows
            ls: dir
          - os: macos-latest
            platform: macos

    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Set up rust
        if: matrix.platform != 'linux'
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install python dependencies
        run: pip install -U setuptools wheel twine cibuildwheel build

      - name: Package source distribution
        if: matrix.platform == 'linux'
        run: |
          python -m build --sdist -o dist/

      - name: Build wheel
        run: cibuildwheel --output-dir dist/ --platform ${{ matrix.platform }}
        env:
          CIBW_BUILD: ${{ github.event.inputs.cibw_build }}

      - name: List dist files
        run: ${{ matrix.ls || 'ls -lh' }} dist/

      - uses: actions/upload-artifact@v3
        with:
          path: |
            ./dist/*.whl
            ./dist/*.tar.gz

      - name: Twine check
        run: twine check dist/*

  upload-pypi:
    needs:
      - build-wheels
    runs-on: ubuntu-latest
    if: always() && github.event_name == 'push'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
