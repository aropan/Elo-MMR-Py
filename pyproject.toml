[build-system]
requires = ["setuptools", "wheel", "setuptools-rust"]
build-backend = "setuptools.build_meta"

[project]
name = "Elo-MMR-Py"
version = "1.0.3"
readme = "README.md"
description = "Python bindings for Elo-MRR"
authors = [{name = "Aleksey Ropan"}]
license = {file = "LICENSE"}
keywords = ['rating', 'competition', 'skill', 'mmr', 'elo', 'trueskill', 'endure', 'glicko', 'python', 'rust']
classifiers = [
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Rust",
  "Topic :: Games/Entertainment",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Utilities"
]

[project.urls]
Discussion = "https://github.com/aropan/Elo-MMR-Py/discussions"
Issues = "https://github.com/aropan/Elo-MMR-Py/issues"
Repository = "https://github.com/aropan/Elo-MMR-Py"

[[tool.setuptools-rust.ext-modules]]
target = "elo_mmr_py.elo_mmr_python_bindings"

[tool.cibuildwheel]
skip = "*musllinux* pp* cp27-* cp35-* cp36-* cp37-* cp38-*"
build-verbosity = 1
environment = { VERBOSE = "1" }
test-requires = "pytest"
test-command = "pytest {project}/tests -s -v"

[tool.cibuildwheel.linux]
environment = 'PATH="$HOME/.cargo/bin:$PATH"'
before-build = "yum install -y openssl-devel && curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=stable --profile=minimal -y && rustup show"

[tool.cibuildwheel.macos]
archs = 'x86_64 arm64'
environment = 'PATH="$HOME/.cargo/bin:$PATH"'
before-build = "rustup default stable && rustup show"

[[tool.cibuildwheel.overrides]]
select = "*macos*x86_64*"
before-build = "rustup target add --toolchain stable x86_64-apple-darwin && rustup default stable-x86_64-apple-darwin && rustup show"

[[tool.cibuildwheel.overrides]]
select = "*macos*arm64*"
before-build = "rustup target add --toolchain stable aarch64-apple-darwin && rustup default stable-aarch64-apple-darwin && rustup show"

[tool.cibuildwheel.windows]
environment = 'PATH="$UserProfile\.cargo\bin;$PATH"'

[[tool.cibuildwheel.overrides]]
select = "*win32*"
before-build = "rustup toolchain install stable-i686-pc-windows-msvc && rustup default stable-i686-pc-windows-msvc && rustup override set stable-i686-pc-windows-msvc && rustup show"

[[tool.cibuildwheel.overrides]]
select = "*win_amd64*"
before-build = "rustup toolchain install stable-x86_64-pc-windows-msvc && rustup default stable-x86_64-pc-windows-msvc && rustup override set stable-x86_64-pc-windows-msvc && rustup show"
